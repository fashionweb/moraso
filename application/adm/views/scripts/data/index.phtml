var west = Ext.getCmp('viewport-west');
west.removeAll();

west.setVisible(true);
west.add(new Ext.Panel({
	layout: 'accordion',
	layoutConfig: {
        titleCollapse: true,
        hideCollapseTool: true,
        animate: true
    },
	items: [
		new Ext.tree.TreePanel({
			id: 'pageview-cattree',
			title: 'Category tree',
	        useArrows: true,
	        autoScroll: true,
	        animate: true,
	        containerScroll: true,
	        border: false,
	        dataUrl: '<?php echo $this->url(array('controller' => 'data', 'action' => 'treesource'), 'default'); ?>',
	        rootVisible: false,
	        singleExpand: true,
	        stopRestoring: false,
	        root: {
	            nodeType: 'async',
	            text: 'Root',
	            draggable: false,
	            id: '0'
	        },
	        listeners: {
    			click: function(node, event){
        			node.expand();
    			}
			},
	        stateEvents : ['collapsenode', 'expandnode'],
		    stateId : '<?php echo 'categorytree-' . md5(__FILE__); ?>',
		    stateful : true,
		    getState : function () {
		        var nodes = [];
		        this.getRootNode().eachChild(function (child) {
		            //function to store state of tree recursively
		            var storeTreeState = function (node, expandedNodes) {
		                if(node.isExpanded() && node.childNodes.length > 0) {	                	
		                    expandedNodes.push(node.getPath());
		                    node.eachChild(function (child) {
		                        storeTreeState(child, expandedNodes);
		                    });
		                }
		            };
		            storeTreeState(child, nodes);
		        });
		            
		        return {
		            expandedNodes : nodes
		        }
		    },
		    applyState : function (state) {
	            var nodes = state.expandedNodes;
	            for(var i = 0; i < nodes.length; i++) {
	                if(typeof nodes[i] != 'undefined') {
	                    this.expandPath(nodes[i]);
	                }
	            }
		    }
	    }),
	    {
	    	title: 'Something else',
	    	html: '<div>this is just a test.</div>'
	    },
	    {
	    	title: 'Something different',
	    	height: 100,
	    	html: '<div>this is just a test.</div>'
	    }
	]
}));

Ext.getCmp('viewport').doLayout();
<?php return; ?>
<div class="tabs">
	<ul>
		<li>
			<a href="#tabs-1"><?php echo $this->translate('Last opened articles'); ?></a>
		</li>
	</ul>
	
	<div id="tabs-1">
		<div class="tab-content">
			<table id="lastopened-overview" border="0" cellpadding="0" cellspacing="0" class="full">
				<thead>
					<tr>
						<th scope="col"><?php echo $this->translate('ID'); ?></th>
						<th scope="col"><?php echo $this->translate('Title'); ?></th>
						<th scope="col"><?php echo $this->translate('Page title'); ?></th>
						<th scope="col"><?php echo $this->translate('Category'); ?></th>
					</tr>
				</thead>
				<tbody>
					<?php foreach ($this->articles as $article) : $article = (object) $article; ?>
						<tr id="idart-<?php echo $article->idart; ?>" style="cursor:pointer;">
							<td><?php echo $article->idart; ?> [<?php echo $article->idartlang; ?>]</td>
							<td><?php echo $article->title; ?></td>
							<td><?php echo $article->pagetitle; ?></td>
							<td><?php echo $article->name; ?></td>
						</tr>
					<?php endforeach; ?>
				</tbody>
			</table>			
		</div>
	</div>
	
</div>

<?php $this->inlineScript()->captureStart(); ?>
<?php foreach ($this->plugins as $plugin) : ?>
<?php echo (isset($plugin->js) ? $plugin->js : ''); ?>
<?php endforeach; ?>
<?php $this->inlineScript()->captureEnd(); ?>