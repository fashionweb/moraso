var center = Ext.getCmp('viewport-center');
center.removeAll();

var mappingGrid = new Ext.grid.GridPanel({
	title: '<?php echo Aitsu_Translate :: translate('Mapping'); ?>',
	store: new Ext.data.JsonStore({
		url: '<?php echo $this->url(array('controller' => 'store', 'action' => 'synccontent'), 'default'); ?>',
		root: 'data',
		fields: ['id', 'idv', 'type', 'title']
	}),
    columns: [
    	{
    		xtype: 'actioncolumn',
    		width: 1,
    		align: 'left',
    		menuDisabled: true, 
            sortable: false,
    		items: [
    			{
                    getClass: function(v, meta, rec) {
                    	if (rec.get('type') == 'cat') {
                    		return 'grid-folder';
                    	} else {
                    		return 'grid-page';
                    	}
                    }
    			}
    		]
    	},
    	{dataIndex: 'idv', header: 'ID', menuDisabled: true, sortable: true, width: 10},
    	{dataIndex: 'title', header: '<?php echo Aitsu_Translate :: translate('Title'); ?>', menuDisabled: true, sortable: true},
    	{dataIndex: 'pagetitle', header: '<?php echo Aitsu_Translate :: translate('Page title'); ?>', menuDisabled: true, sortable: true}
	],
	viewConfig: {
		forceFit: true,
		autoFill: true
	},
	tbar: {
	},
	listeners: {
		rowclick: function(grid, rowIndex, event) {
			var rec = grid.getStore().getAt(rowIndex);
			Ext.Ajax.request({
				url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'sync'), 'default'); ?>',
				success: function() {},
				params: {
					idart: rec.get('idv')
				}
			});					
		}
	}
});

center.add(mappingGrid);

Ext.getCmp('viewport').doLayout();