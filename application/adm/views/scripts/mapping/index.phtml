var center = Ext.getCmp('viewport-center');
center.removeAll();

var mappingGrid = new Ext.grid.GridPanel({
	title: '<?php echo Aitsu_Translate :: translate('Mapping'); ?>',
	store: new Ext.data.JsonStore({
		url: '<?php echo $this->url(array('action' => 'mappings')); ?>',
		root: 'data',
		fields: ['id', 'name', 'env'],
		autoLoad: true
	}),
    columns: [
    	{dataIndex: 'id', header: 'ID', menuDisabled: true, sortable: true, width: 10, align: 'left'},
    	{dataIndex: 'name', header: '<?php echo Aitsu_Translate :: translate('Name'); ?>', menuDisabled: true, sortable: false},
    	{dataIndex: 'env', header: '<?php echo Aitsu_Translate :: translate('Environment'); ?>', menuDisabled: true, sortable: false}
	],
	viewConfig: {
		forceFit: true,
		autoFill: true
	},
	tbar: {
		items: [
			{
	            tooltip: '<?php echo Aitsu_Translate :: translate('Add new mapping'); ?>',
	            iconCls: 'tb-add',
	            handler: function(b, e) {
	            	Ext.aitsu.load(['<?php echo $this->url(array('action' => 'edit')); ?>']);
	            }
	        }
	    ]
	},
	listeners: {
		rowclick: function(grid, rowIndex, event) {
			var rec = grid.getStore().getAt(rowIndex);
			Ext.aitsu.load(['<?php echo $this->url(array('action' => 'edit')); ?>?id=' + rec.get('id')]);
		},
		rowcontextmenu: function(grid, rowIndex, event) {
			
			this.getSelectionModel().selectRow(rowIndex);
			var record = this.getStore().getAt(rowIndex);
			
			var menu = new Ext.menu.Menu();
			
			menu.addItem({
				text: '<?php echo $this->translate('Delete'); ?>',
				iconCls: 'delete',
				handler: function() {
					 Ext.MessageBox.show({
					 	title: '<?php echo $this->translate('Delete mapping'); ?>',
					 	msg: '<?php echo $this->translate('Are you sure to delete the selected mapping?'); ?>',
					 	buttons: Ext.MessageBox.OKCANCEL,
					 	fn: function(result) {
					 		if (result == 'ok') {
				            	Ext.Ajax.request({
				            		url: '<?php echo $this->url(array('action' => 'delete')); ?>',
				            		success: function(response, opts) {
				            			var rsp = Ext.decode(response.responseText);
				            			if (rsp.success) {
				            				Ext.aitsu.msg('<?php echo Aitsu_Translate :: translate('Mapping removed'); ?>', '<?php echo Aitsu_Translate :: translate('The selected mapping has been removed.'); ?>');
					            			grid.getStore().load(); 
				            			}
				            		},
				            		params: { id: record.get('id') }
				            	});					 			
					 		}
					 	}
					 });
				}
			});
			
			menu.showAt(event.getXY());
		}		
	}
});

center.add(mappingGrid);

Ext.getCmp('viewport').doLayout();