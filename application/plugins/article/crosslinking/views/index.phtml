var crosslinkingTree = new Ext.tree.TreePanel({
	id: 'crosslinking-cattree',
	useArrows: true,
	autoScroll: true,
	animate: true,
	enableDD: true,
	containerScroll: true,
	border: false,
	padding: '10px 0 10px 10px',
	dataUrl: '<?php echo $this->url(array('controller' => 'data', 'action' => 'treesource'), 'default'); ?>',
	rootVisible: false,
	singleExpand: true,
	stopRestoring: false,
	root: {
		nodeType: 'async',
		text: 'Root',
		draggable: false,
		id: '0'
	},
	listeners: {
		click: function(node, event) {
			if (node.attributes.type == 'category') {
				node.expand();
			} else if (node.attributes.type == 'page') {
            	Ext.Ajax.request({
            		url: '<?php echo $this->url(array('plugin' => 'crosslinking', 'paction' => 'add'), 'aplugin'); ?>',
            		success: function(response, opts) {
            			crosslinks.getStore().load();
            		},
            		params: {
            			idart: <?php echo $this->idart; ?>,
            			idartlang: node.attributes.idartlang
            		}
            	});					 			
			}
		}
	}
});

var crosslinks = new Ext.grid.GridPanel({
	store: new Ext.data.JsonStore({
        autoDestroy: true,
        url: '<?php echo $this->url(array('plugin' => 'crosslinking', 'paction' => 'store'), 'aplugin'); ?>',
        remoteSort: false,
        storeId: 'crosslinkStore',
        idProperty: 'idartlang',
        root: 'data',
        fields: ['idartlang', 'idart', 'title', 'pagetitle', 'idcat', 'category'],
        baseParams: {
        	idart: <?php echo $this->idart; ?>
        }
    }),
    columns: [
    	{dataIndex: 'idart', header: 'ID', menuDisabled: true, sortable: true, width: 20},
    	{dataIndex: 'title', header: '<?php echo Aitsu_Translate :: translate('Title'); ?>', menuDisabled: true, sortable: true},
    	{dataIndex: 'pagetitle', header: '<?php echo Aitsu_Translate :: translate('Page title'); ?>', menuDisabled: true, sortable: true},
    	{dataIndex: 'category', header: '<?php echo Aitsu_Translate :: translate('Category'); ?>', menuDisabled: true, sortable: true}
	],
	viewConfig: {
		forceFit: true,
		autoFill: true
	},
	border: false,
	listeners: {
		render: {
			fn: function(){
				this.getStore().load();
			}
		},
		rowcontextmenu: function(grid, rowIndex, event) {
			
			this.getSelectionModel().selectRow(rowIndex);
			var record = this.getStore().getAt(rowIndex);
			
			var menu = new Ext.menu.Menu();
			
			menu.addItem({
				text: '<?php echo $this->translate('Delete'); ?>',
				iconCls: 'delete',
				handler: function() {
					 Ext.MessageBox.show({
					 	title: '<?php echo $this->translate('Delete link'); ?>',
					 	msg: '<?php echo $this->translate('Are you sure to delete the selected link?'); ?>',
					 	buttons: Ext.MessageBox.OKCANCEL,
					 	fn: function(result) {
					 		if (result == 'ok') {
				            	Ext.Ajax.request({
				            		url: '<?php echo $this->url(array('plugin' => 'crosslinking', 'paction' => 'delete'), 'aplugin'); ?>',
				            		success: function(response, opts) {
				            			var rsp = Ext.decode(response.responseText);
				            			if (rsp.success) {
					            			var store = grid.getStore().remove(record); 
				            			}
				            		},
				            		params: { 
				            			idart: <?php echo $this->idart; ?>,
				            			idartlang: record.get('idartlang')
				            		}
				            	});					 			
					 		}
					 	}
					 });
				}
			});
			
			menu.showAt(event.getXY());
		}
			
	}
});


Ext.getCmp('page-edit-tab').add({
	id: 'article-plugin-crosslinking',
	title: '<?php echo Aitsu_Translate :: translate('Crosslinking'); ?>',
	layout: 'border',
	items: [
		{
			region: 'west',
			width: 250,
			layout: 'fit',
			split: true,
			items: crosslinkingTree
		}, 
		{
			region: 'center',
			layout: 'fit',
			split: true,
			items: crosslinks
		}
	]
});
