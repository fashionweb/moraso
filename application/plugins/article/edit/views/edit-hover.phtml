$(function() {
	
	$(document).unbind('edit-page-content');
	$(document).bind('edit-page-content', function(event, obj) {

		var oBody = obj.contents().find("body");
		$(document).data('edit-frame-content', oBody);
		
		obj.contents().find("head").append('<link rel="stylesheet" type="text/css" href="/adm/css/flexeditor.css" />');
		obj.contents().find("head").append('<link rel="stylesheet" type="text/css" href="/adm/js/markItUp/1.1.12/markitup/skins/markitup/style.css" />');
		obj.contents().find("head").append('<link rel="stylesheet" type="text/css" href="/adm/js/markItUp/1.1.12/markitup/sets/textile/style.css" />');
		
		/* Enable flex editors (if available). */
		$('.flexeditor', oBody).enableFlexEditor();
		
		/* Stop links working. */
		$('a', oBody).click(function(e) {
			e.preventDefault();
		});
		
		/* Unbind potential events in elements inside .aitsu_editable elements. */
		$('.aitsu_editable', oBody).find().unbind();
		
		/* Unbind previosly made bindings. */
		$('.aitsu_editable', oBody).unbind();
		$('.show-on-demand', oBody).unbind();
		$(document).unbind('edit-save');
		$(document).unbind('toogle-sub-templates');
		$(document).unbind('doReplace');
		
		/* Hover and edit binding normal .aitsu_editables (except on-demand). */
		$('.aitsu_editable:not(.on-demand .no-edit)', oBody).bind('mouseenter', function (e){
			e.stopPropagation();
			$(this).closest('ul.flexcontent > li').trigger('mouseenter');
			$('.aitsu_editable', oBody).css({
				'background': 'none',
				'border': 'none',
				'margin': '0',
				'cursor': 'auto'
			});
			$(this).css({
				'background-color': '#ec7537',
				'border': '5px solid #ec7537',
				'margin': '-5px',
				'cursor': 'pointer'
			});
			$('.aitsu_editable', oBody).unbind('click');
			$(this).bind('click', function(e) {
				e.stopPropagation();
				/(.*?)\-(.*?)\-(\d*)$/.exec($(this).attr('id'));
				doEditHandler({
					type: RegExp.$1,
					container: RegExp.$2,
					idartlang: RegExp.$3,
					params: $(this).find('code.aitsu_params').length > 0 ? $(this).find('code.aitsu_params').first().html() : ''
				});
			});
		});
		$('.aitsu_editable:not(.on-demand), .no-edit', oBody).bind('mouseleave', function (e){
			$(this).css({
				'background': 'none',
				'border': 'none',
				'margin': '0'
			});
			$(this).unbind('click');
			$(this).parents('.aitsu_editable, .no-edit').first().trigger('mouseenter');
		});
		$('.no-edit', oBody).bind('mouseenter', function (e){
			e.stopPropagation();
			$('.aitsu_editable', oBody).css({
				'background': 'none',
				'border': 'none',
				'margin': '0',
				'cursor': 'auto'
			});
			$('.aitsu_editable', oBody).unbind('click');
		});
		
		$('.aitsu_editable.on-demand .show-on-demand', oBody).bind('mouseenter', function() {
			$('.aitsu_editable', oBody).css({
				'background': 'none',
				'cursor': 'auto'
			});
			$('.aitsu_editable', oBody).unbind('click');
			$(this).bind('click', function(e) {
				$(this).parents('.aitsu_editable').triggerHandler('doEdit');
				/(.*?)\-(.*?)\-(\d*)$/.exec($(this).parents('.aitsu_editable').attr('id'));
				doEditHandler({
					type: RegExp.$1,
					container: RegExp.$2,
					idartlang: RegExp.$3,
					params: $(this).parents('.aitsu_editable').find('code.aitsu_params').length > 0 ? $(this).parents('.aitsu_editable').find('code.aitsu_params').first().html() : ''
				});				 
			});
		});
		$('.aitsu_editable.on-demand .show-on-demand', oBody).bind('mouseleave', function() {
			$(this).unbind('click');
			$(this).parents('.aitsu_editable').first().next().trigger('mouseenter');
		});
		
		$(document).bind('toogle-sub-templates', function() {
			if ($(document).data('show-sub-templates') == '1') {
				$('.show-on-demand', oBody).css({
					'display': 'none',
					'border': 'none',
					'padding': '0'
				});
				$(document).data('show-sub-templates', '0');
			} else {
				$('.show-on-demand', oBody).css({
					'display': 'block',
					'border': '1px dotted black',
					'padding': '5px'
				});
				$(document).data('show-sub-templates', '1');
			}
		});
		
		/* Content replace handler. */
		$(document).bind('doReplace', function(event, type, container, idartlang, data) {
			$('#' + type.replace(/\./g, '\\.') + '-' + container + '-' + idartlang, oBody).html($('#.aitsu_hover:first', data));
			$(document).trigger('edit-page-content', [$('#edit-iframe-' + idartlang)]);
			var boxModelFrame = Ext.get('edit-iframe-boxmodel-<?php echo $this->idartlang; ?>');
			if (boxModelFrame != null) {
				boxModelFrame.set({
		        	src: '<?php echo $this->url(array('plugin' => 'editalt', 'paction' => 'index'), 'aplugin'); ?>?idart=<?php echo $this->idart; ?>'
				});
			}
			$(document).trigger('toogle-sub-templates');
			$(document).trigger('toogle-sub-templates');
		});
	});
	
	$(document).unbind('edit-page-content-box');
	$(document).bind('edit-page-content-box', function(event, obj) {
		var bBody = obj.contents().find("body");
		
		$('div.shortcode', bBody).hover(function() {
			$(this).toggleClass('hover');
		});
		
		$('div.shortcode', bBody).click(function() {
			$('.shortcode', bBody).removeClass('focused');
			$(this).addClass('focused');
			
			var type = $(this).children('input[name=method]').val();
	  		var container = $(this).children('input[name=index]').val();
	  		var params = '';
	  		if ($(this).find('code.params').length > 0) {
	  			params = $(this).find('code.params').first().html();
	  		}
	  		
			doEditHandler({
				type: type,
				container: container,
				idartlang: <?php echo $this->idartlang; ?>,
				params: $(this).find('code.params').length > 0 ? $(this).find('code.params').first().html() : ''
			});
			
			return false;
		});
	});
	
});