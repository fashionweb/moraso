var setUnpublished = function() {
	var b = Ext.getCmp('publish-button');
	b.setIconClass('page-unpublished');
	b.setDisabled(false);
}

var jsonParams = new Ext.util.MixedCollection();

win = new Ext.Window({
	layout:'fit',
	width:700,
	height:500,
	modal: true,
	closable: false,
	plain: true,
	shadow: true,
	floating: true,
	items: new Ext.FormPanel({
		id: 'edit-content-form',
		url: '<?php echo $this->url(array('plugin' => 'edit', 'paction' => 'save'), 'aplugin'); ?>',
		border: false,
		layout: 'fit',
		items: [{
			xtype:'tabpanel',
			activeTab: 0,
			items:[
				<?php for ($i = 0; $i < count($this->data->editInfo); $i++) : ?>
					<?php /* edit fields */ ?>
					<?php echo $this->partial('edit/content.phtml', array('field' => $this->data->editInfo[$i])); ?>
					<?php if ($i < count($this->data->editInfo) - 1) : ?>,<?php endif; ?>
				<?php endfor; ?>
				<?php if (count($this->data->editInfo) > 0 && (count($this->data->configTabs) > 0) || !empty($this->data->editInfo)) : ?>
				,
				<?php endif; ?>
				<?php for ($i = 0; $i < count($this->data->configTabs); $i++) : ?>
					<?php /* config as tab */ ?>
					<?php echo $this->partial('edit/' . $this->data->configTabs[$i]->getTemplate(), array('field' => $this->data->configTabs[$i])); ?>
					<?php if ($i < count($this->data->configTabs) - 1) : ?>,<?php endif; ?>
				<?php endfor; ?>
				<?php if (count($this->data->configTabs) > 0 && !empty($this->data->editInfo)) : ?>
				,
				<?php endif; ?>
				<?php if (!empty($this->data->configInfo)) : ?>
					<?php /* configuration */ ?>
					{
						title: '<?php echo Aitsu_Translate :: translate('Configuration'); ?>', 
						layout: 'form',
						autoScroll: true,
						padding: '5px',
						items: [					
							<?php $counter = 1; foreach($this->data->configInfo as $fieldset => $config) : $counter++; ?>
								<?php echo $this->partial('edit/fieldset.phtml', array('fieldset' => $fieldset, 'config' => $config)); ?>
								<?php if ($counter < count($this->data->configInfo)) : ?>,<?php endif; ?>
							<?php endforeach; ?>
						]
					}
				<?php endif; ?>
			]
		},
		<?php foreach($this->data->configInfo as $fieldset => $config) : ?>
		<?php foreach ($config as $field) : ?>
		{
			xtype: 'hidden',
			name: 'configType-<?php echo $field->name; ?>',
			value: '<?php echo $field->type; ?>'
		},
		<?php endforeach; ?>
		<?php endforeach; ?>
		<?php foreach($this->data->configTabs as $field) : ?>
		{
			xtype: 'hidden',
			name: 'configType-<?php echo $field->name; ?>',
			value: '<?php echo $field->type; ?>'
		},
		<?php endforeach; ?>
		{
			xtype: 'hidden',
			name: 'type',
			value: '<?php echo $this->data->type; ?>'
		},
		{
			xtype: 'hidden',
			name: 'container',
			value: '<?php echo $this->data->container; ?>'
		},
		{
			xtype: 'hidden',
			name: 'idartlang',
			value: '<?php echo $this->data->idartlang; ?>'
		},
		{
			xtype: 'hidden',
			name: 'params',
			value: '<?php echo str_replace("\n", '\n', $this->data->params); ?>'
		}]		
	}),
	buttons: [{
		text:'<?php echo Aitsu_Translate :: translate('Cancel'); ?>',
		iconCls: 'cancel',
		handler: function(){
			win.destroy();
		}
	},{
		text: '<?php echo Aitsu_Translate :: translate('Save'); ?>',
		iconCls: 'save',
		handler: function(){
			for(var i in CKEDITOR.instances) {
				Ext.getCmp(i).setRawValue(CKEDITOR.instances[i].getData());
			}
			Ext.getCmp('edit-content-form').getForm().submit({
				success: function(form, action) {
					$(document).trigger('doReplace', [action.result.data.type, action.result.data.container, action.result.data.idartlang, action.result.data.html]);
					win.destroy();
					setUnpublished();
				},
				failure: function(form, action) {
					win.destroy();
				},
				params: {
					json: Ext.util.JSON.encode(jsonParams.map)
				}
			});
		}
	}]
});
win.show();
