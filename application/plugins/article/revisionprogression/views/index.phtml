alert('test');

Ext.ux.IFrameComponent = Ext.extend(Ext.BoxComponent, {
     onRender : function(ct, position){
          this.el = ct.createChild({tag: 'iframe', id: this.id, frameBorder: 0, src: this.url});
     }
});

choosen_revision_iframe = new Ext.ux.IFrameComponent({id: 'preview-iframe-choosen', url: null});
            
var revisions = new Ext.grid.GridPanel({
    id: 'revisions',
	store: new Ext.data.JsonStore({
        autoDestroy: true,
        url: '<?php echo $this->url(array('plugin' => 'revisionprogression', 'paction' => 'store'), 'aplugin'); ?>',
        remoteSort: false,
        storeId: 'revisionsStore',
        idProperty: 'pubid',
        root: 'data',
        fields: [{name: 'pubid', type: 'int'}, 'user', {name: 'pubtime', type: 'date', dateFormat: 'Y-m-d H:i:s'}, 'status'],
        baseParams: {
        	idart: <?php echo $this->idart; ?>
        }
    }),
    columns: [
        {dataIndex: 'status', header: '<?php echo Aitsu_Translate :: translate('Status'); ?>', menuDisabled: true, sortable: true, renderer: function(value, metaData, record, rowIndex, colIndex, store) {
            if (record.get('status') == 1) {
                return '<span style="color:green;"><?php echo Aitsu_Translate :: translate('published'); ?></span>';
	    }
	}},
        {dataIndex: 'pubtime', header: '<?php echo Aitsu_Translate :: translate('Date'); ?>', menuDisabled: true, sortable: true, renderer: Ext.util.Format.dateRenderer('d.m.Y H:i:s')},
        {dataIndex: 'user', header: '<?php echo Aitsu_Translate :: translate('User'); ?>', menuDisabled: true, sortable: true}
	],
	viewConfig: {
		forceFit: true,
		autoFill: true
	},
	border: false,
	listeners: {
		render: {
			fn: function(){
				this.getStore().load();
			}
		},
                rowclick : function(grid,rowIndex,e) {               
                                                               
                    var pubid = Ext.getCmp('revisions').selModel.getSelected().data.pubid;
            
                    Ext.Ajax.request({
                        url: '<?php echo $this->url(array('plugin' => 'revisionprogression', 'paction' => 'activate'), 'aplugin'); ?>',
			success: function(response, opts) {
                            var rsp = Ext.decode(response.responseText);
                            if (rsp.success) {
                                Ext.getCmp('revisions').getStore().reload();
                                       
                                Ext.get('edit-iframe-<?php echo $this->idartlang; ?>').set({
                                        src: '<?php echo Aitsu_Registry :: get()->config->sys->mainDir; ?>adm/edit/<?php echo $this->idartlang; ?>'
                                });
                                
                                Ext.get('preview-iframe-choosen').set({
                                    src: '<?php echo Aitsu_Registry :: get()->config->sys->mainDir; ?>adm/preview/<?php echo $this->idartlang; ?>'
                                });
                            }
			},
			params: { 
                            idart: <?php echo $this->idart; ?>,
                            idartlang: <?php echo $this->idartlang; ?>,
                            pubid: pubid
			}
                    });					 			
		}
	}
});

var revisionView = {
    layout: {
        type: 'vbox',
        pack: 'start',
        align: 'stretch'
    },
    defaults: {
        frame: false
    },
    border: false,
    items: [{
        title: 'current Edit',
        flex: 1,
        xtype: 'panel',
        layout:'fit',
        items: [choosen_revision_iframe],
        tbar: {
            items: [{
                tooltip: '<?php echo Aitsu_Translate :: translate('Publish'); ?>',
	        iconCls: 'page-published',
	        handler: function(b, e) {
                    Ext.MessageBox.show({
					 	title: '<?php echo $this->translate('Publish'); ?>',
					 	msg: '<?php echo $this->translate('Are you sure to publish the selected revision?'); ?>',
					 	buttons: Ext.MessageBox.OKCANCEL,
					 	fn: function(result) {
                                                
                                                var pubid = Ext.getCmp('revisions').selModel.getSelected().data.pubid;
            
					 	if (result == 'ok') {
				            	Ext.Ajax.request({
				            		url: '<?php echo $this->url(array('plugin' => 'revisionprogression', 'paction' => 'publish'), 'aplugin'); ?>',
				            		success: function(response, opts) {
				            			var rsp = Ext.decode(response.responseText);
				            			if (rsp.success) {
					            			Ext.getCmp('revisions').getStore().reload();
				            			}
				            		},
				            		params: { 
                                                                idart: <?php echo $this->idart; ?>,
                                                                idartlang: <?php echo $this->idartlang; ?>,
                                                                pubid: pubid
				            		}
				            	});					 			
					 		}
					 	}
					 });
	        }
            }]
	}
    }]
};

Ext.getCmp('page-edit-tab').add({
    id: 'article-plugin-revisionprogression',
    title: '<?php echo Aitsu_Translate :: translate('Revision Progression'); ?>',
    layout: 'border',
    items: [{
        title: 'Revisions',
	region: 'west',
	width: 400,
	layout: 'fit',
	split: true,
	items: revisions
    }, {
	region: 'center',
	layout: 'fit',
	split: true,
	items: revisionView
    }]
});