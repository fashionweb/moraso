var rewritehistoryGrid = new Ext.grid.GridPanel({
	title: '<?php echo Aitsu_Translate :: translate('Rewrite History'); ?>',
	id: 'rewritehistoryGrid',
	store: new Ext.data.JsonStore({
		url: '<?php echo $this->url(array('plugin' => 'rewritehistory', 'paction' => 'store'), 'aplugin'); ?>',
		root: 'data',
		fields: ['id', 'url', 'target'],
                baseParams: {
                        idart: <?php echo $this->idart; ?>
                }
	}),
    columns: [
    	{dataIndex: 'url', header: '<?php echo Aitsu_Translate :: translate('url'); ?>', menuDisabled: true},
    	{dataIndex: 'target', header: '<?php echo Aitsu_Translate :: translate('target'); ?>', menuDisabled: true}
	],
	viewConfig: {
		forceFit: true,
		autoFill: true
	},
	tbar: {
		items: [
			{
	            tooltip: '<?php echo Aitsu_Translate :: translate('Add new Rewrite Rule'); ?>',
	            iconCls: 'tb-add',
	            handler: function(b, e) {
	            	Ext.aitsu.load(['<?php echo $this->url(array('plugin' => 'rewritehistory', 'paction' => 'edit'), 'aplugin'); ?>'], null, {
                                idart: <?php echo $this->idart; ?>
			});
	            }
	        }
	    ]
	},
	listeners: {
		rowclick: function(grid, rowIndex, event) {
			var rec = grid.getStore().getAt(rowIndex);
			Ext.aitsu.load(['<?php echo $this->url(array('plugin' => 'rewritehistory', 'paction' => 'edit'), 'aplugin'); ?>'], null, {
				id: rec.get('id'),
                                idart: <?php echo $this->idart; ?>
			});
		},
		rowcontextmenu: function(grid, rowIndex, event) {
			
			this.getSelectionModel().selectRow(rowIndex);
			var record = this.getStore().getAt(rowIndex);
			
			var menu = new Ext.menu.Menu();
			
			menu.addItem({
				text: '<?php echo $this->translate('Delete'); ?>',
				iconCls: 'delete',
				handler: function() {
					 Ext.MessageBox.show({
					 	title: '<?php echo $this->translate('Delete Rewrite Rule'); ?>',
					 	msg: '<?php echo $this->translate('Are you sure to delete the selected rewrite Rule?'); ?>',
					 	buttons: Ext.MessageBox.OKCANCEL,
					 	fn: function(result) {
					 		if (result == 'ok') {
				            	Ext.Ajax.request({
				            		url: '<?php echo $this->url(array('plugin' => 'rewritehistory', 'paction' => 'delete'), 'aplugin'); ?>',
				            		success: function(response, opts) {
				            			var rsp = Ext.decode(response.responseText);
				            			if (rsp.success) {
				            				Ext.aitsu.msg('<?php echo Aitsu_Translate :: translate('Entry removed'); ?>', '<?php echo Aitsu_Translate :: translate('The selected Rewrite Rule has been removed.'); ?>');
					            			grid.getStore().load(); 
				            			}
				            		},
				            		params: { id: record.get('id') }
				            	});					 			
					 		}
					 	}
					 });
				}
			});
			
			menu.showAt(event.getXY());
		}		
	}
});

Ext.getCmp('page-edit-tab').add({
	id: 'article-plugin-rewrite-history',
	title: '<?php echo Aitsu_Translate :: translate('Rewrite History'); ?>',
	layout: 'fit',
        listeners: {
            activate: function() {
                Ext.getCmp('rewritehistoryGrid').getStore().reload();
            }
        },
	items: [rewritehistoryGrid]
});