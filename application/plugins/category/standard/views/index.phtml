var categories = new Ext.grid.GridPanel({
	title: '<?php echo $this->categoryname; ?>',
	store: new Ext.data.ArrayStore({
		fields: [
			{name: 'id'},
			{name: 'title'},
			{name: 'pagetitle'},
			{name: 'urlname'},
			{name: 'online'},
			{name: 'published'},
			{name: 'isstart'}
		],
		data: <?php echo Aitsu_Util_Javascript :: getArrayString($this->articles, array('idart', 'title', 'pagetitle', 'urlname', 'online', 'published', 'isstart')); ?>
    }),
    columns: [
    	{
    		xtype: 'actioncolumn',
    		width: 30,
    		menuDisabled: true, 
            sortable: false,
    		items: [
    			{
                    getClass: function(v, meta, rec) {
                    	if (rec.get('online') == 1) {
                    		this.items[0].tooltip = 'Online';
                    		return 'page-online';
                    	} else {
                    		this.items[0].tooltip = 'Offline';
                    		return 'page-offline';
                    	}
                    },
                    handler: function(grid, rowIndex, colIndex) {
						Ext.Ajax.request({
							url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'toggleonline'), 'default'); ?>',
				            success: function(response, opts) {
				            	var rsp = Ext.decode(response.responseText);
				            	var art = categories.getStore().getAt(categories.getStore().find('id', rsp.idart));
				            	art.set('online', rsp.online);
				            	art.set('published', 0); 
				            	var node = pagetree.getNodeById('<?php echo $this->idcat; ?>');
				            	pagetree.getLoader().load(node, function() {node.expand()});
				            },
				            params: { idart: categories.getStore().getAt(rowIndex).get('id') }
				        });                    	
                    }
                },
    			{
                    getClass: function(v, meta, rec) {
                    	if (rec.get('published') == 1) {
                    		this.items[1].tooltip = 'Published';
                    		return 'page-published';
                    	} else {
                    		this.items[1].tooltip = 'Unpublished';
                    		return 'page-unpublished';
                    	}
                    },
                    handler: function(grid, rowIndex, colIndex) {
                    	if (categories.getStore().getAt(rowIndex).get('published') == 0) {
							Ext.Ajax.request({
								url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'startpublishing'), 'default'); ?>',
					            success: function(response, opts) {
					            	var rsp = Ext.decode(response.responseText);
					            	var art = categories.getStore().getAt(categories.getStore().find('id', rsp.idart));
					            	art.set('published', 1); 
					            	var node = pagetree.getNodeById('<?php echo $this->idcat; ?>');
					            	pagetree.getLoader().load(node, function() {node.expand()});
					            },
					            params: { idart: categories.getStore().getAt(rowIndex).get('id') }
					        });
                    	}
                    }
                },
    			{
                    getClass: function(v, meta, rec) {
                    	if (rec.get('isstart') == 1) {
                    		this.items[2].tooltip = 'Index article';
                    		return 'page-indexpage';
                    	}
                    }
                }
             ]
        },
    	{dataIndex: 'id', header: 'ID', menuDisabled: true, sortable: true, width: 20},
    	{dataIndex: 'title', header: 'Title', menuDisabled: true, sortable: true},
    	{dataIndex: 'pagetitle', header: 'Pagetitle', menuDisabled: true, sortable: true},
    	{dataIndex: 'urlname', header: 'URL name', menuDisabled: true, sortable: true}
	],
	viewConfig: {
		forceFit: true,
		autoFill: true
	},
	border: false,
	tbar: {
		items: {
            text: 'Add new article',
            iconCls: 'tb-add',
            handler: function(b, e) {
            	Ext.Ajax.request({
            		url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'newarticle'), 'default'); ?>',
            		success: function(response, opts) {
            			var rsp = Ext.decode(response.responseText);
            			rsp.id = rsp.idart;
            			var store = categories.getStore();
            			store.addSorted(new store.recordType(rsp));  
            			var node = pagetree.getNodeById('<?php echo $this->idcat; ?>');
					    pagetree.getLoader().load(node, function() {node.expand()});          			
            		},
            		params: { idcat: '<?php echo $this->idcat; ?>' }
            	});
            }
        }
	},
	listeners: {
		rowcontextmenu: function(grid, rowIndex, event) {
			
			this.getSelectionModel().selectRow(rowIndex);
			var record = this.getStore().getAt(rowIndex);
			var menu = new Ext.menu.Menu();

			menu.addItem({
				text: '<?php echo $this->translate('Set as index'); ?>',
				iconCls: 'cm-indexpage',
				handler: function() {
					alert('set as index');
				}
			});
			
			menu.addItem('-');
			
			menu.addItem({
				text: record.get('online') == 1 ? '<?php echo $this->translate('Set offline'); ?>' : '<?php echo $this->translate('Set online'); ?>',
				iconCls: record.get('online') == 1 ? 'page-offline' : 'page-online',
				handler: function() {
					Ext.Ajax.request({
						url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'toggleonline'), 'default'); ?>',
			            success: function(response, opts) {
			            	var rsp = Ext.decode(response.responseText);
			            	var art = categories.getStore().getAt(categories.getStore().find('id', rsp.idart));
			            	art.set('online', rsp.online);
			            	art.set('published', 0); 
			            	var node = pagetree.getNodeById('<?php echo $this->idcat; ?>');
			            	pagetree.getLoader().load(node, function() {node.expand()});
			            },
			            params: { idart: record.get('id') }
			        });
				}
			});				
			
			if (record.get('published') == 0) {
				menu.addItem({
					text: '<?php echo $this->translate('Publish'); ?>',
					iconCls: 'page-published',
					handler: function() {
						Ext.Ajax.request({
							url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'startpublishing'), 'default'); ?>',
				            success: function(response, opts) {
				            	var rsp = Ext.decode(response.responseText);
				            	var art = categories.getStore().getAt(categories.getStore().find('id', rsp.idart));
				            	art.set('published', 1); 
				            	var node = pagetree.getNodeById('<?php echo $this->idcat; ?>');
				            	pagetree.getLoader().load(node, function() {node.expand()});
				            },
				            params: { idart: record.get('id') }
				        });
					}
				});				
			}
			
			menu.addItem('-');
			
			menu.addItem({
				text: '<?php echo $this->translate('Delete'); ?>',
				iconCls: 'delete',
				handler: function() {
					 Ext.MessageBox.show({
					 	title: '<?php echo $this->translate('Delete page'); ?>',
					 	msg: '<?php echo $this->translate('Are you sure to delete the selected page?'); ?>',
					 	buttons: Ext.MessageBox.OKCANCEL,
					 	fn: function(result) {
					 		if (result == 'ok') {
				            	Ext.Ajax.request({
				            		url: '<?php echo $this->url(array('controller' => 'data', 'action' => 'delete'), 'default'); ?>',
				            		success: function(response, opts) {
				            			var rsp = Ext.decode(response.responseText);
				            			if (rsp.success) {
					            			var store = categories.getStore(); 
					            			store.remove(record);
					            			var node = pagetree.getNodeById('<?php echo $this->idcat; ?>');
					            			pagetree.getLoader().load(node, function() {node.expand()});
				            			}
				            		},
				            		params: { idart: record.get('id') }
				            	});					 			
					 		}
					 	}
					 });
				}
			});
			
			menu.showAt(event.getXY());
		}
	}
});

tabs.add(categories);
tabs.setActiveTab(0);
