var center = Ext.getCmp('viewport-center');
center.removeAll();

var store = new Ext.data.JsonStore({
        autoDestroy: true,
        url: '<?php echo $this->url(array('paction' => 'store')); ?>',
        remoteSort: false,
	storeId: 'datesStore',
        idProperty: 'id',
	root: 'data',
        fields: [{
            name: 'id',
            type: 'int'
        }, {
            name: 'name',
            type: 'string'
        }, {
            name: 'description',
            type: 'string'
        }, {
            name: 'date',
            type: 'date',
            dateFormat: 'Y-m-d H:i:s'
        }],
        sortInfo:{field: 'id', direction: "ASC"}
});

var colModel = new Ext.grid.ColumnModel({
    defaults: {
        sortable: true
    },
    columns: [{
        header: '<?php echo Aitsu_Translate :: translate('ID'); ?>',
        dataIndex: 'id',
        id: 'id',
        width: 5
    }, {
        header: '<?php echo Aitsu_Translate :: translate('Date'); ?>',
        dataIndex: 'date',
        id: 'date',
        width: 10,
        renderer : Ext.util.Format.dateRenderer('d.m.Y H:i'),
    }, {
        header: '<?php echo Aitsu_Translate :: translate('Name'); ?>',
        dataIndex: 'name',
        id: 'name',
        width: 15
    }, {
        header: '<?php echo Aitsu_Translate :: translate('Description'); ?>',
        dataIndex: 'description',
        id: 'description'
    }]
});

var dates = new Ext.grid.GridPanel({
    id: 'dates',
    title: '<?php echo Aitsu_Translate :: translate('Dates'); ?>',
    store: store,
    colModel: colModel,
    viewConfig: {
        forceFit: true,
        autoFill: true
    },
    listeners: {
        render: {
            fn: function() {
                this.getStore().load();
            }
        },
        rowclick: function(grid, rowIndex, event) {
            var id = this.getStore().getAt(rowIndex).get('id');
             Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>'], null, {id: id});
	},
	rowcontextmenu: function(grid, rowIndex, event) {
            var id = this.getStore().getAt(rowIndex).get('id');

            var menu = new Ext.menu.Menu();

            menu.addItem({
                text: '<?php echo $this->translate('Delete'); ?>',
                iconCls: 'delete',
                handler: function() {
                    Ext.MessageBox.show({
                        title: '<?php echo $this->translate('Delete'); ?>',
                        msg: '<?php echo $this->translate('Are you sure to delete the selected data?'); ?>',
                        buttons: Ext.MessageBox.OKCANCEL,
                        fn: function(result) {
                            if (result == 'ok') {
                                Ext.Ajax.request({
                                    url: '<?php echo $this->url(array('paction' => 'delete')); ?>',
                                    success: function(response, opts) {
                                        var rsp = Ext.decode(response.responseText);
                                        if (rsp.success) {
                                            Ext.aitsu.msg('<?php echo Aitsu_Translate :: translate('Deleted'); ?>', '<?php echo Aitsu_Translate :: translate('Date has been deleted.'); ?>');
                                            dates.getStore().reload();
                                        }
                                    },
                                    params: {
                                        id: id
                                    }
                                });
                            }
                        }
                    });
                }
            });

            menu.showAt(event.getXY());
        }
    },
    tbar: {
        items: [{
            tooltip: '<?php echo Aitsu_Translate :: translate('Add new Date'); ?>',
            iconCls: 'tb-add',
            handler: function(b, e) {
                Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>']);
            }
	}]
    }
});

center.add(dates);

Ext.getCmp('viewport').doLayout();