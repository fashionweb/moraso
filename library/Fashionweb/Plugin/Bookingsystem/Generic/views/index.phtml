var center = Ext.getCmp('viewport-center');
center.removeAll();

function renderStatus(value, p, record) {
    if (value == 1) {
        return 'angefragt';
    }
    
    if (value == 2) {
        return 'gebucht';
    }
    
    if (value == 3) {
        return 'abgelehnt';
    }
}

var bookingsystemGrid = new Ext.grid.GridPanel({
    id: 'bookingsystemGrid',
    title: '<?php echo Aitsu_Translate::translate('Bookings'); ?>',
    store: new Ext.data.JsonStore({
        autoDestroy: true,
        url: '<?php echo $this->url(array('paction' => 'store')); ?>',
        remoteSort: false,
        storeId: 'bookingsystemStore',
        root: 'data',
        fields: [{
	        name: 'id_request',
                type: 'int'
	    }, {
	        name: 'first_name'
	    }, {
	        name: 'last_name'
	    }, {
                name: 'date_from',
                type: 'date',
                dateFormat: 'Y-m-d'
            }, {
                name: 'date_until',
                type: 'date',
                dateFormat: 'Y-m-d'
            }, {
                name: 'status',
                type: 'int'
            }, {
                name: 'people',
                type: 'int'
            }]
    }),
    columns: [
        {dataIndex: 'id_request', header: '#', width: 4, sortable: true, menuDisabled: true},
        {dataIndex: 'first_name', header: '<?php echo Aitsu_Translate::translate('Firstname'); ?>', sortable: true, menuDisabled: true},
        {dataIndex: 'last_name', header: '<?php echo Aitsu_Translate::translate('Lastname'); ?>', sortable: true, menuDisabled: true},
        {dataIndex: 'date_from', header: '<?php echo Aitsu_Translate::translate('From'); ?>', width: 16, sortable: true, menuDisabled: true, renderer: Ext.util.Format.dateRenderer('d.m.Y')},
        {dataIndex: 'date_until', header: '<?php echo Aitsu_Translate::translate('Until'); ?>', width: 16, sortable: true, menuDisabled: true, renderer: Ext.util.Format.dateRenderer('d.m.Y')},
        {dataIndex: 'status', header: '<?php echo Aitsu_Translate::translate('Status'); ?>', sortable: true, menuDisabled: true, renderer: renderStatus},
        {dataIndex: 'people', header: '<?php echo Aitsu_Translate::translate('People'); ?>', sortable: true, menuDisabled: true}
    ],
    viewConfig: {
        forceFit: true,
        autoFill: true
    },
    border: false,
    tbar: {
        items: [{
            tooltip: '<?php echo Aitsu_Translate::translate('Refresh list'); ?>',
            iconCls: 'tb-refresh',
            handler: function(b, e) {    
                bookingsystemGrid.getStore().load({
                    callback: Ext.aitsu.mask(true),
                    callback: function(r, options, success) {
                        Ext.aitsu.mask(false);
                    }
                });
            }
        }, {
            tooltip: '<?php echo Aitsu_Translate::translate('Add new request'); ?>',
	    iconCls: 'tb-add',
	    handler: function(b, e) {
                Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>']);
            }
        }]
    },
    listeners: {
        render: {
            fn: function(){
                this.getStore().load();
            }
        },
        rowclick: function(grid, rowIndex, event) {
            var rec = grid.getStore().getAt(rowIndex);
            Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>'], null, {
                id_request: rec.get('id_request')
            });
	},
        rowcontextmenu: function(grid, rowIndex, event) {
            this.getSelectionModel().selectRow(rowIndex);
            var record = this.getStore().getAt(rowIndex);
            
            var menu = new Ext.menu.Menu();
                        
            menu.addItem({
                text: '<?php echo $this->translate('Edit'); ?>',
		iconCls: 'edit',
		handler: function() {
                    var rec = grid.getStore().getAt(rowIndex);
                    Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>'], null, {
                        id_request: record.get('id_request')
                    });				 			         
		}
            });
            
            menu.addItem({
                text: '<?php echo $this->translate('Delete'); ?>',
		iconCls: 'delete',
		handler: function() {
                    Ext.MessageBox.show({
                        title: '<?php echo $this->translate('Delete request'); ?>',
                        msg: '<?php echo $this->translate('Are you sure to delete the selected request?'); ?>',
			buttons: Ext.MessageBox.YESNO,
			fn: function(result) {
                            if (result == 'yes') {
                                Ext.Ajax.request({
                                    url: '<?php echo $this->url(array('paction' => 'delete')); ?>',
				    success: function(response, opts) {
                                        var rsp = Ext.decode(response.responseText);
				        if (rsp.success) {
                                            Ext.aitsu.msg('<?php echo Aitsu_Translate::translate('Request removed'); ?>', '<?php echo Aitsu_Translate::translate('The selected request has been removed.'); ?>');
                                             grid.getStore().load(); 
				        }
				    },
				    params: {
                                        id_request: record.get('id_request')
                                    }
				});					 			
                            }
                        }
                    });			 			         
		}
            });
                        
            menu.addSeparator();
            
            menu.addItem({
                text: 'Status',
                menu: {
                    items: [{
                        text: 'angefragt',
                        handler: function() {
                            setStatus(grid, record.get('id_request'), 1)
                        }
                    }, {
                        text: 'gebucht',
                        handler: function() {
                            setStatus(grid, record.get('id_request'), 2)
                        }
                    }, {
                        text: 'abgelehnt',
                        handler: function() {
                            setStatus(grid, record.get('id_request'), 3)
                        }
                    }]
                }
            });
            
            menu.showAt(event.getXY());
        }
    }
});

var setStatus = function(grid, id_request, status) {
    Ext.Ajax.request({
        url: '<?php echo $this->url(array('paction' => 'status')); ?>',
        success: function(response, opts) {
        var rsp = Ext.decode(response.responseText);
            if (rsp.success) {
                Ext.aitsu.msg('<?php echo Aitsu_Translate::translate('changed status'); ?>', '<?php echo Aitsu_Translate::translate('The status of the booking has been changed.'); ?>');
                grid.getStore().load(); 
            }
        },
        params: {
            id_request: id_request,
            status: status
        }
    });
}

center.add(bookingsystemGrid);

Ext.getCmp('viewport').doLayout();