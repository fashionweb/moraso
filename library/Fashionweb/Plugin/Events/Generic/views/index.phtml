var center = Ext.getCmp('viewport-center');
center.removeAll();

var eventsGrid = new Ext.grid.GridPanel({
    id: 'eventsGrid',
    title: '<?php echo Aitsu_Translate :: translate('Events'); ?>',
    store: new Ext.data.JsonStore({
        autoDestroy: true,
        url: '<?php echo $this->url(array('paction' => 'store')); ?>',
        remoteSort: false,
        storeId: 'eventStore',
        root: 'data',
        fields: [{
	        name: 'idevent',
                type: 'int'
	    }, {
                name: 'title'
            }, {
                name: 'organizer'
            }, {
	        name: 'active',
                type: 'int'
	    }, {
	        name: 'created',
                type: 'date',
                dateFormat: 'Y-m-d H:i:s'
	    }, {
	        name: 'starttime',
                type: 'date',
                dateFormat: 'Y-m-d H:i:s'
	    }, {
	        name: 'endtime',
                type: 'date',
                dateFormat: 'Y-m-d H:i:s'
	    }]
    }),
    columns: [
        {dataIndex: 'idevent', header: '<?php echo Aitsu_Translate :: translate('#'); ?>', width: 4, sortable: true, menuDisabled: true},
        {dataIndex: 'created', header: '<?php echo Aitsu_Translate :: translate('created'); ?>', width: 16, sortable: true, menuDisabled: true, renderer: Ext.util.Format.dateRenderer('d.m.Y H:i:s')},
        {dataIndex: 'organizer', header: '<?php echo Aitsu_Translate :: translate('organizer'); ?>', width: 16, sortable: true, menuDisabled: true},
        {dataIndex: 'title', header: '<?php echo Aitsu_Translate :: translate('title'); ?>', sortable: true, menuDisabled: true},
        {
            dataIndex: 'active',
            sortable: false,
            menuDisabled: true,
            width: 4,
            renderer: function(val) {
                if (val == 0) {
                    return '<center><span class="page-offline" style="display: block;" /></center>';
                } else {
                    return '<center><span class="page-online" style="display: block;" /></center>';
                }
            }
        },
        {dataIndex: 'starttime', header: '<?php echo Aitsu_Translate :: translate('Start'); ?>', width: 16, sortable: true, menuDisabled: true, renderer: Ext.util.Format.dateRenderer('d.m.Y H:i:s')},
        {dataIndex: 'endtime', header: '<?php echo Aitsu_Translate :: translate('End'); ?>', width: 16, sortable: true, menuDisabled: true, renderer: Ext.util.Format.dateRenderer('d.m.Y H:i:s')},
    ],
    viewConfig: {
        forceFit: true,
        autoFill: true
    },
    border: false,
    tbar: {
        items: [{
            tooltip: '<?php echo Aitsu_Translate :: translate('Refresh list'); ?>',
            iconCls: 'tb-refresh',
            handler: function(b, e) {    
                eventsGrid.getStore().load({
                    callback: Ext.aitsu.mask(true),
                    callback: function(r, options, success) {
                        Ext.aitsu.mask(false);
                    }
                });
            }
        }, {
            tooltip: '<?php echo Aitsu_Translate :: translate('Add new event'); ?>',
	    iconCls: 'tb-add',
	    handler: function(b, e) {
                Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>']);
            }
        }, {
            tooltip: '<?php echo Aitsu_Translate :: translate('Config Events-Plugin'); ?>',
	    iconCls: 'edit',
	    handler: function(b, e) {
                Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'config')); ?>']);
            }
        }]
    },
    listeners: {
        render: {
            fn: function(){
                this.getStore().load();
            }
        },
        rowclick: function(grid, rowIndex, event) {
            var rec = grid.getStore().getAt(rowIndex);
            Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>'], null, {
                idevent: rec.get('idevent')
            });
	},
        rowcontextmenu: function(grid, rowIndex, event) {
            this.getSelectionModel().selectRow(rowIndex);
            var record = this.getStore().getAt(rowIndex);
            
            var menu = new Ext.menu.Menu();
                        
            menu.addItem({
                text: '<?php echo $this->translate('Edit'); ?>',
		iconCls: 'edit',
		handler: function() {
                    var rec = grid.getStore().getAt(rowIndex);
                    Ext.aitsu.load(['<?php echo $this->url(array('paction' => 'edit')); ?>'], null, {
                        idevent: record.get('idevent')
                    });				 			         
		}
            });
            
            menu.addItem({
                text: '<?php echo $this->translate('Delete'); ?>',
		iconCls: 'delete',
		handler: function() {
                    Ext.MessageBox.show({
                        title: '<?php echo $this->translate('Delete event'); ?>',
                        msg: '<?php echo $this->translate('Are you sure to delete the selected event?'); ?>',
			buttons: Ext.MessageBox.YESNO,
			fn: function(result) {
                            if (result == 'yes') {
                                Ext.Ajax.request({
                                    url: '<?php echo $this->url(array('paction' => 'delete')); ?>',
				    success: function(response, opts) {
                                        var rsp = Ext.decode(response.responseText);
				        if (rsp.success) {
                                            Ext.aitsu.msg('<?php echo Aitsu_Translate :: translate('Event removed'); ?>', '<?php echo Aitsu_Translate :: translate('The selected event has been removed.'); ?>');
                                             grid.getStore().load(); 
				        }
				    },
				    params: {
                                        idevent: record.get('idevent')
                                    }
				});					 			
                            }
                        }
                    });			 			         
		}
            });
            
            menu.addItem('-');
             
            if (record.get('active') == 0) {
                menu.addItem({
                    text: '<?php echo $this->translate('Activate'); ?>',
                    iconCls: 'cm-setonline',
                    handler: function() {
                        Ext.MessageBox.show({
                            title: '<?php echo $this->translate('Activate event'); ?>',
                            msg: '<?php echo $this->translate('Are you sure to activate the selected event?'); ?>',
                            buttons: Ext.MessageBox.YESNO,
                            fn: function(result) {
                                if (result == 'yes') {
                                    Ext.Ajax.request({
                                        url: '<?php echo $this->url(array('paction' => 'activate')); ?>',
                                        success: function(response, opts) {
                                            var rsp = Ext.decode(response.responseText);
                                            if (rsp.success) {
                                                Ext.aitsu.msg('<?php echo Aitsu_Translate :: translate('Event activated'); ?>', '<?php echo Aitsu_Translate :: translate('The selected event has been activated.'); ?>');
                                                grid.getStore().load(); 
                                            }
                                        },
                                        params: {
                                            idevent: record.get('idevent')
                                        }
                                    });					 			
                                }
                            }
                        });			 			         
                    }
                });
            } else {
                menu.addItem({
                    text: '<?php echo $this->translate('Deactivate'); ?>',
                    iconCls: 'cm-setoffline',
                    handler: function() {
                        Ext.MessageBox.show({
                            title: '<?php echo $this->translate('Deactivate event'); ?>',
                            msg: '<?php echo $this->translate('Are you sure to deactivate the selected event?'); ?>',
                            buttons: Ext.MessageBox.YESNO,
                            fn: function(result) {
                                if (result == 'yes') {
                                    Ext.Ajax.request({
                                        url: '<?php echo $this->url(array('paction' => 'deactivate')); ?>',
                                        success: function(response, opts) {
                                            var rsp = Ext.decode(response.responseText);
                                            if (rsp.success) {
                                                Ext.aitsu.msg('<?php echo Aitsu_Translate :: translate('Event deactivated'); ?>', '<?php echo Aitsu_Translate :: translate('The selected event has been deactivated.'); ?>');
                                                grid.getStore().load(); 
                                            }
                                        },
                                        params: {
                                            idevent: record.get('idevent')
                                        }
                                    });					 			
                                }
                            }
                        });			 			         
                    }
                });
            }
            
            menu.showAt(event.getXY());
        }
    }
});

center.add(eventsGrid);
	
Ext.getCmp('viewport').doLayout();