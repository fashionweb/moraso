var dashboard = Ext.getCmp('dashboard');

var store = new Ext.data.JsonStore({
		        autoDestroy: true,
		        url: '<?php echo $this->url(array('paction' => 'store')); ?>',
		        root: 'data',
		        fields: [{
		            name: 'idart'
		        }, {
		            name: 'pagetitle'
		        }, {
		            name: 'articletitle'
		        }, {
		            name: 'title'
		        }, {
		            name: 'duedate',
                            type: 'date',
                            dateFormat: 'Y-m-d H:i:s'
		        }, {
		            name: 'today',
                            type: 'date',
                            dateFormat: 'Y-m-d H:i:s'
		        }, {
		            name: 'description'
		        }]
		    });
                    
var todoExpander = new Ext.ux.grid.RowExpander({
    tpl : new Ext.Template(
        '<pre style="padding:10px;">{description}</pre>'
    )
});

var editPage = function(id) {
	Ext.aitsu.load(['<?php echo $this->url(array('controller' => 'data', 'action' => 'edit'), 'default'); ?>'], function() {
		Ext.getCmp('viewport').doLayout();
		Ext.getCmp('page-edit-tab').activate(0);
		Ext.getCmp('rop').getStore().load();
	}, {id: id});
}

var todos = new Ext.grid.GridPanel({
    id: 'todos',
    title: 'To-do List',
    store: store,
    sortInfo: {
        field: 'duedate',
        direction: 'ASC'
    },
    columns: [
    	todoExpander,
        {dataIndex: 'title', header: '<?php echo Aitsu_Translate :: translate('To Do'); ?>', menuDisabled: true, sortable: true},
        {dataIndex: 'duedate', header: '<?php echo Aitsu_Translate :: translate('Due'); ?>', menuDisabled: true, sortable: true, renderer: Ext.util.Format.dateRenderer('d.m.Y')},
        {dataIndex: 'status', header: '<?php echo Aitsu_Translate :: translate('Status'); ?>', menuDisabled: true, sortable: true, renderer: function(value, metaData, record, rowIndex, colIndex, store) {
            if (record.get('duedate') < record.get('today')) {
                return '<span style="color:red;"><?php echo Aitsu_Translate :: translate('over due'); ?></span>';
            } else {
    			return '<span style="color:green;"><?php echo Aitsu_Translate :: translate('pending'); ?></span>';
            }
    	}}
    ],
    viewConfig: {
        forceFit: true,
        autoFill: true
    },
	listeners: {
		render: {
			fn: function(){
				this.getStore().load();
			}
		},
            celldblclick: function(grid, rowIndex) {
			editPage(this.getStore().getAt(rowIndex).get('idart'));
		},
		rowcontextmenu: function(grid, rowIndex, event) {
                
                    var record = this.getStore().getAt(rowIndex);
                
                    var menu = new Ext.menu.Menu();
			
                    menu.addItem({
                        text: '<?php echo $this->translate('Go to article'); ?>',
                        iconCls: 'edit',
                        handler: function() {
                            editPage(record.get('idart'));
                        }
                    });
						
                    menu.showAt(event.getXY());
		}
	},
	tbar: {
		items: [
			{
	            tooltip: '<?php echo Aitsu_Translate :: translate('Open todo list'); ?>',
	            iconCls: 'tm-todo',
	            handler: function(b, e) {
	            	Ext.aitsu.load(['gplugin/Aitsu/Todo'], null, {ajax: 1});
	            }
	        }
	    ]
	},
	plugins: todoExpander
});

dashboard.add({
	columnWidth: 1/3,
	baseCls:'x-plain',
	bodyStyle:'padding:6px 4px 0 4px',
	items: {
		unstyled: true,
		height: 370,
		layout: 'fit',
		items: todos
	}
});
